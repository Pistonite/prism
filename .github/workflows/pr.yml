name: PR
on:
  pull_request:
    branches:
      - main

jobs:
  check:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    steps:
      - uses: Pistonight/mono-dev/actions/setup@main
        with:
          runner: blacksmith
          submodules: true
          ecma-pnpm: true
          ecma-bun: true
          rust: stable
          rust-wasm: true
          tool-cargo-binstall: workex=Pistonite/workex
      - run: task install-ci
      - run: task check
  test:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    steps:
      - uses: Pistonight/mono-dev/actions/setup@main
        with:
          runner: blacksmith
          submodules: true
          ecma-pnpm: true
          ecma-bun: true
          rust: stable
          tool-cargo-binstall: workex=Pistonite/workex
      - run: task install-ci
      - run: task test
  build-app:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    steps:
      - uses: Pistonight/mono-dev/actions/setup@main
        with:
          runner: blacksmith
          submodules: true
          ecma-pnpm: true
          ecma-bun: true
          rust: stable
          rust-wasm: true
          tool-cargo-binstall: workex=Pistonite/workex
      - run: task install-ci
      - run: task build-dev

  build-cli:
    strategy:
      fail-fast: false
      matrix:
        include:
          - image: ubuntu-latest
            target: x64
          - image: ubuntu-24.04-arm
            target: arm64
          - image: macos-latest
            target: x64
          - image: macos-latest
            target: arm64
          - image: windows-latest
            target: x64
          - image: windows-11-arm
            target: arm64
    runs-on: ${{ matrix.image }}
    steps:
      - uses: Pistonight/mono-dev/actions/setup@main
        with:
          rust: stable
          rust-native: ${{ matrix.target }}
          submodules: true
          ecma-pnpm: true
          ecma-bun: true
          rust: stable
          tool-cargo-binstall: workex=Pistonite/workex
      - run: task install-ci
      - uses: Pistonight/mono-dev/actions/rust-xplat@main
        with:
          arch: ${{ matrix.target }}
          binary: prism
